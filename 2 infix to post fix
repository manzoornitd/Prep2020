#include <iostream>
#include <bits/stdc++.h>
using namespace std;

int prec(char c)
{
     if(c=='^')
     return 3;
     if(c=='*' || c=='/' || c=='%')
     return 2;
     if(c=='+' || c== '-')
     return 1;
     return 0;
}

string in2po(string s)
{
     string ns;
     ns="";
     stack <char> st;
     st.push('$');
     int i,n;
     n=s.size();
     for(i=0;i<n;i++)
     {
          if((s[i]>='a' && s[i] <='x') || (s[i]>='A' && s[i]<='Y'))
          ns=ns+s[i];
          else if(s[i]=='(')
          st.push(s[i]);
          else if(s[i]==')')
          {
               while(st.top()!='(')
               {
                    char c=st.top();
                    ns=ns+c;
                    st.pop();
               }
               st.pop();
          }
          else
          {
               while(st.top()!='$' && prec(s[i])<=prec(st.top()))
               {
                    char c=st.top();
                    ns=ns+c;
                    st.pop();
               }
               st.push(s[i]);
          }
     }
     while(st.top()!='$')
     {
          char c=st.top();
          st.pop();
          ns=ns+c;
     }
     return ns;
}

for infix to prefix 
reverse the raw string 
make ( to ) and ) to (;
find postfix of it 
reverse the output .
