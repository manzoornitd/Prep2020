#include <iostream>
#include <bits/stdc++.h>
using namespace std;

void fun(vector <int> &a,int n,int sum,int ind,int count,int *max)

{
    if(ind==n || sum<0)
    return;
    if(sum==0)
    {
         if(count<(*max))
         {
              *max=count;
              return;
         }
    }
    if(*max>count+1)
    fun(a,n,sum-a[ind],ind+1,count+1,max);
    if(*max>count+1)
    fun(a,n,sum-a[ind],ind,count+1,max);
    if(*max>count)
    fun(a,n,sum,ind+1,count,max);
   return ;
}
//dpppp
#include <iostream>
#include <bits/stdc++.h>
using namespace std;
int fun(int a[],int n,int k,int dp[])
{
     if(k==0)
     {
          return 0;
     }
     if(k<0)
     return -1;
     if(dp[k]!=-1)
     return dp[k];
     int i;
     int ans=INT_MAX;
     for(i=0;i<n;i++)
     {
       
            int x= fun(a,n,k-a[i],dp);
            
             if(x>=0 && x!=INT_MAX)
               ans=min(ans,x+1);  
            
       
     }
     dp[k]=ans;
     return ans;
}


